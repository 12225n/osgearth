SET(LIB_NAME osgEarthCesium)

IF(OSGEARTH_BUILD_SHARED_LIBS)
    ADD_DEFINITIONS(-DOSGEARTHCESIUM_LIBRARY)
ELSE ()
    ADD_DEFINITIONS(-DOSGEARTHCESIUM_LIBRARY_STATIC)
ENDIF()

set(TARGET_SRC
    AssetAccessor.cpp
    CesiumCreditsNode.cpp
    CesiumTilesetNode.cpp
    Context.cpp
    PrepareRenderResources.cpp
    Settings.cpp
    TaskProcessor.cpp    
)
	
set(LIB_PUBLIC_HEADERS
    CesiumTilesetNode
    CesiumCreditsNode
    Context
	Export
    Settings
    )
	
SET(TARGET_H
	${LIB_PUBLIC_HEADERS}
    AssetAccessor
    PrepareRenderResources
    TaskProcessor    
	)

set(CMAKE_CXX_STANDARD 17)

ADD_LIBRARY(${LIB_NAME}
    ${OSGEARTH_DYNAMIC_OR_STATIC}
    ${TARGET_H}
    ${TARGET_SRC}
    ${TARGET_GLSL}
    ${TARGET_IN}
)

IF (WIN32)
  LINK_EXTERNAL(${LIB_NAME} ${TARGET_EXTERNAL_LIBRARIES} ${CMAKE_THREAD_LIBS_INIT} ${MATH_LIBRARY})
ELSE(WIN32)
  LINK_EXTERNAL(${LIB_NAME} ${TARGET_EXTERNAL_LIBRARIES} ${CMAKE_THREAD_LIBS_INIT} ${MATH_LIBRARY})
ENDIF(WIN32)

LINK_INTERNAL(${LIB_NAME}
    osgEarth
)

IF (TRACY_FOUND)
    INCLUDE_DIRECTORIES(${TRACY_INCLUDE_DIR})
    LINK_WITH_VARIABLES(${LIB_NAME} TRACY_LIBRARY)
ENDIF(TRACY_FOUND)

INCLUDE_DIRECTORIES(${CESIUM_NATIVE_INCLUDE_DIR})
LINK_WITH_VARIABLES(${LIB_NAME}
                    OSG_LIBRARY
                    OSGUTIL_LIBRARY
                    OSGDB_LIBRARY
                    CESIUM_NATIVE_3DTILES_LIBRARY                    
                    CESIUM_NATIVE_3DTILES_SELECTION_LIBRARY
                    CESIUM_NATIVE_UTILITY_LIBRARY
                    CESIUM_NATIVE_GLTF_READER_LIBRARY
                    CESIUM_NATIVE_ION_CLIENT_LIBRARY
                    CESIUM_NATIVE_GEOSPATIAL_LIBRARY)
LINK_CORELIB_DEFAULT(${LIB_NAME} ${CMAKE_THREAD_LIBS_INIT} ${MATH_LIBRARY})

# Add this project to the NodeKits solution folder
set_property( TARGET ${LIB_NAME} PROPERTY FOLDER "NodeKits" )

INCLUDE(ModuleInstall OPTIONAL)