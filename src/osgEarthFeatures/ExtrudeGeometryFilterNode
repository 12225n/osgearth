#pragma once

#include <osg/Referenced>
#include <osg/Matrixd>

#include <osgEarth/URI>

namespace osg
{
   class Group;
}

namespace osgEarth {
   namespace Features
   {
      class ExtrudeGeometryFilterNode : public osg::Referenced
      {
      public:
         struct ModelSymbol
         {
            URI instanceURI;
            osg::Matrixd xform;
         };

         ExtrudeGeometryFilterNode(osg::Group* extrusionGroup, const osg::Matrixd& xform)
            : _extrusionGroup(extrusionGroup)
            , _xform(xform)
         {

         }
         osg::Group* extrusionGroup() { return _extrusionGroup; }
         const osg::Matrixd& xform() { return _xform; }

         void clearExtrusionGroup()
         {
            _extrusionGroup = 0;
         }
      private:
         osg::ref_ptr<osg::Group> _extrusionGroup;
         osg::Matrixd _xform;
      };
   }
}